@model MoviesMVC.Models.MovieGenreViewModel

@{
    ViewData["Title"] = "Movies";
}

@if (TempData["SuccessMessage"] != null)
{
    <div id="success-toast" class="toast align-items-center text-bg-success border-0" role="alert">
        <div class="d-flex">
            <div class="toast-body">
                @TempData["SuccessMessage"]
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" onclick="document.getElementById('success-toast').classList.add('toast-hide');"></button>
        </div>
    </div>
}

<h1 class="text-center text-decoration-underline mb-5 fw-bolder">Your Movies</h1>

<form asp-controller="Movies" asp-action="Index" method="get">
    <div class="container d-flex justify-content-start gap-2 mb-3" style="max-height: 35px;">
        <select asp-for="MovieGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>

        <label class="ms-3 text-pop">Title: <input type="text" asp-for="SearchString" /></label>
        <label class="me-2 text-pop-cb">
            <input type="checkbox" asp-for="FavoritesOnly" />
            Show favorites only
        </label>

        <button type="submit" class="border-1 fw-bold filter-btn">Filter
            <img src="/img/filter-icon.jpg" />
        </button>
        <a class="btn btn-danger text-end ms-auto rm-filter" asp-action="Index">Remove All Filters
            <img src="img/bin.png"/>
        </a>
    </div>
</form>
@if ((bool)ViewData["HasMovies"]! == false)
{
    <h2 class="text-center text-decoration-underline mb-5 fw-bolder">No movies have been added yet. Add your first movie!</h2>
}
else if ((bool)ViewData["HasMatchingMovies"]! == false)
{
    <h2 class="text-center text-decoration-underline mb-5 fw-bolder">No movies match this filter. Try a different one!</h2>
}
else
{
    <table class="table table-bordered table-striped table-hover">
        <thead class="table-light">
            <tr>
                <th style="width: 13%;">
                    <a class="sort-a" asp-action="Index" asp-route-MovieGenre="@Model.MovieGenre"
                       asp-route-SearchString="@Model.SearchString"
                       asp-route-FavoritesOnly="@Model.FavoritesOnly" asp-route-SortBy="Title"
                       asp-route-Descending="@(Model.CurrentSort == "Title" && !Model.SortDescending ? "true" : "false")">@Html.DisplayNameFor(model => model.Movies![0].Title)
                        @if (Model.CurrentSort == "Title" && !Model.SortDescending)
                        {
                            <img src="img/sort-asc.png" style="max-width: 20px; max-height: 20px;"/>
                        }
                        else if (Model.CurrentSort == "Title" && Model.SortDescending)
                        {
                            <img src="img/sort-desc.png" style="max-width: 20px; max-height: 20px;" />
                        }
                    </a>
                </th>
                <th style="width: 10%;">
                    <a class="sort-a" asp-action="Index" asp-route-MovieGenre="@Model.MovieGenre"
                       asp-route-SearchString="@Model.SearchString"
                       asp-route-FavoritesOnly="@Model.FavoritesOnly" asp-route-SortBy="ReleaseDate"
                       asp-route-Descending="@(Model.CurrentSort == "ReleaseDate" && !Model.SortDescending ? "true" : "false")">
                        @Html.DisplayNameFor(model => model.Movies![0].ReleaseDate)
                        @if (Model.CurrentSort == "ReleaseDate" && !Model.SortDescending)
                        {
                            <img src="img/sort-asc.png" style="max-width: 20px; max-height: 20px;" />
                        }
                        else if (Model.CurrentSort == "ReleaseDate" && Model.SortDescending)
                        {
                            <img src="img/sort-desc.png" style="max-width: 20px; max-height: 20px;" />
                        }
                    </a>
                </th>
                <th style="width: 10%">
                    <a class="sort-a" asp-action="Index" asp-route-MovieGenre="@Model.MovieGenre"
                       asp-route-SearchString="@Model.SearchString"
                       asp-route-FavoritesOnly="@Model.FavoritesOnly" asp-route-SortBy="Genre"
                       asp-route-Descending="@(Model.CurrentSort == "Genre" && !Model.SortDescending ? "true" : "false")">
                        @Html.DisplayNameFor(model => model.Movies![0].Genre)
                        @if (Model.CurrentSort == "Genre" && !Model.SortDescending)
                        {
                            <img src="img/sort-asc.png" style="max-width: 20px; max-height: 20px;" />
                        }
                        else if (Model.CurrentSort == "Genre" && Model.SortDescending)
                        {
                            <img src="img/sort-desc.png" style="max-width: 20px; max-height: 20px;" />
                        }
                    </a>
                </th>
                <th style="width: 25%">Starring</th>
                <th style="width: 8%;">
                    <a class="sort-a" asp-action="Index" asp-route-MovieGenre="@Model.MovieGenre"
                       asp-route-SearchString="@Model.SearchString"
                       asp-route-FavoritesOnly="@Model.FavoritesOnly" asp-route-SortBy="Price"
                       asp-route-Descending="@(Model.CurrentSort == "Price" && !Model.SortDescending ? "true" : "false")">
                        @Html.DisplayNameFor(model => model.Movies![0].Price)
                        @if (Model.CurrentSort == "Price" && !Model.SortDescending)
                        {
                            <img src="img/sort-asc.png" style="max-width: 20px; max-height: 20px;" />
                        }
                        else if (Model.CurrentSort == "Price" && Model.SortDescending)
                        {
                            <img src="img/sort-desc.png" style="max-width: 20px; max-height: 20px;" />
                        }
                    </a>
                </th>
                <th style="width: 8%">
                    <a class="sort-a" asp-action="Index" asp-route-MovieGenre="@Model.MovieGenre"
                       asp-route-SearchString="@Model.SearchString"
                       asp-route-FavoritesOnly="@Model.FavoritesOnly" asp-route-SortBy="Rating"
                       asp-route-Descending="@(Model.CurrentSort == "Rating" && !Model.SortDescending ? "true" : "false")">
                        @Html.DisplayNameFor(model => model.Movies![0].Rating)
                        @if (Model.CurrentSort == "Rating" && !Model.SortDescending)
                        {
                            <img src="img/sort-asc.png" style="max-width: 20px; max-height: 20px;" />
                        }
                        else if (Model.CurrentSort == "Rating" && Model.SortDescending)
                        {
                            <img src="img/sort-desc.png" style="max-width: 20px; max-height: 20px;" />
                        }
                    </a>
                </th>
                <th style="width: 10%;">
                    <a class="sort-a" asp-action="Index" asp-route-MovieGenre="@Model.MovieGenre"
                       asp-route-SearchString="@Model.SearchString"
                       asp-route-FavoritesOnly="@Model.FavoritesOnly" asp-route-SortBy="ImdbRating"
                       asp-route-Descending="@(Model.CurrentSort == "ImdbRating" && !Model.SortDescending ? "true" : "false")">
                        @Html.DisplayNameFor(model => model.Movies![0].ImdbRating)
                        @if (Model.CurrentSort == "ImdbRating" && !Model.SortDescending)
                        {
                            <img src="img/sort-asc.png" style="max-width: 20px; max-height: 20px;" />
                        }
                        else if (Model.CurrentSort == "ImdbRating" && Model.SortDescending)
                        {
                            <img src="img/sort-desc.png" style="max-width: 20px; max-height: 20px;" />
                        }
                    </a>
                </th>
                <th style="width: 23%">Actions</th>
                <th style="width: 8%;"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Movies!)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td style="max-width: 30px;">
                        @Html.DisplayFor(modelItem => item.ReleaseDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Genre)
                    </td>
                    @if (item.Actors.Any())
                    {
                        <td class="starring-column">@string.Join(", ",item.Actors)</td>
                    }
                    else
                    {
                        <td>-</td>
                    }

                    <td>
                        @Html.DisplayFor(modelItem => item.Price)$
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rating)
                    </td>
                    @if (item.ImdbRating != 0)
                    {
                        <td>@item.ImdbRating <img src="img/filled-star.png" style="max-width: 20px; max-height: 20px;" /></td>
                    }
                    else
                    {
                        <td>Unknown</td>
                    }

                    <td>
                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a class="btn btn-secondary" asp-action="Details" asp-route-id="@item.Id">Details</a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                    
                    <td>
                        <img id="star-@item.Id"
                             src="@(item.Favorited ? "/img/filled-star.png" : "/img/empty-star.png")"
                             onclick="toggleStar(@item.Id)" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


<div class="d-flex justify-content-between mt-3">
    <p>
        <a class="btn btn-success" asp-action="Create">Create New</a>
    </p>
    @if (Model.PageCount > 1)
    {
        <ul class="pagination my-pagination justify-content-center">
            <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-MovieGenre="@Model.MovieGenre"
                   asp-route-SearchString="@Model.SearchString"
                   asp-route-FavoritesOnly="@Model.FavoritesOnly" asp-route-SortBy="@Model.CurrentSort"
                   asp-route-Descending="@Model.SortDescending" asp-route-pageNumber="@(Model.PageNumber - 1)"
                   asp-route-pageSize="@Model.PageSize">Previous</a>
            </li>
            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-MovieGenre="@Model.MovieGenre"
                       asp-route-SearchString="@Model.SearchString"
                       asp-route-FavoritesOnly="@Model.FavoritesOnly" asp-route-SortBy="@Model.CurrentSort"
                       asp-route-Descending="@Model.SortDescending" asp-route-pageNumber="@i"
                       asp-route-pageSize="@Model.PageSize">@i</a>
                </li>
            }
            <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-MovieGenre="@Model.MovieGenre"
                   asp-route-SearchString="@Model.SearchString"
                   asp-route-FavoritesOnly="@Model.FavoritesOnly" asp-route-SortBy="@Model.CurrentSort"
                   asp-route-Descending="@Model.SortDescending" asp-route-pageNumber="@(Model.PageNumber + 1)"
                   asp-route-pageSize="@Model.PageSize">Next</a>
            </li>
        </ul>
    }
    <p>
        <a class="btn btn-info" asp-action="Export" asp-route-MovieGenre="@Model.MovieGenre"
           asp-route-SearchString="@Model.SearchString"
           asp-route-FavoritesOnly="@Model.FavoritesOnly" asp-route-SortBy="@Model.CurrentSort" asp-route-Descending="@Model.SortDescending">Export To Excel</a>
    </p> 
</div>
<p class="total-price fw-bolder text-center">Total Price: <strong>@ViewData["TotalPrice"]$</strong></p>

@Html.AntiForgeryToken()
<script>
    function toggleStar(itemId) {
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            fetch('/Movies/ToggleFavorite', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': token
            },
            body: JSON.stringify({ itemId: itemId })
        })
        .then(response => response.json())
        .then(data => {
            const star = document.getElementById('star-' + itemId);
            star.src = data.favorited ? '/img/filled-star.png' : '/img/empty-star.png';
            star.classList.Add('pulse');
            setTimeout(() => {
                star.classList.remove('pulse');
            }, 1100);
        });
    }
</script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const toast = document.getElementById("success-toast");
        toast.classList.add("show");

        const autoHide = setTimeout(() => {
                toast.classList.add("hide");
                setTimeout(() => toast.remove(), 1000);
            }, 3000);

            toast.querySelector(".btn-close").addEventListener("click", () => {
                clearTimeout(autoHide);
                toast.classList.add("hide");
                setTimeout(() => toast.remove(), 600);
            });
    });
</script>



