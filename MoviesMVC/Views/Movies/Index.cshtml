@model MoviesMVC.Models.MovieGenreViewModel

@{
    ViewData["Title"] = "Movies";
}

<h1 class="text-center text-decoration-underline mb-5">Your Movies</h1>

<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        <select asp-for="MovieGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>

        <label class="ms-2">Title: <input type="text" asp-for="SearchString" /></label>
     
        <button type="submit" class="border-1 fw-bold">Filter
            <img src="/img/filter-icon.jpg" />
        </button>

    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].Rating)
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
       @foreach (var item in Model.Movies!) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)$
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                <a class="btn btn-secondary" asp-action="Details" asp-route-id="@item.Id">Details</a>
                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
            <td>
                <img id="star-@item.Id"
                             src="@(item.Favorited ? "/img/filled-star.png" : "/img/empty-star.png")"
                             onclick="toggleStar(@item.Id)" />
            </td>
        </tr>
     }
    </tbody>
</table>

<div class="d-flex justify-content-between mt-3">
    <p>
        <a class="btn btn-success" asp-action="Create">Create New</a>
    </p>
    <p class="text-decoration-underline total-price fw-bolder mt-2">Total Price: @ViewData["TotalPrice"]$</p>
    <p>
        <a class="btn btn-info" asp-action="Export">Export To Excel</a>
    </p>
</div>
@Html.AntiForgeryToken()
<script>
    function toggleStar(itemId) {
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            fetch('/Movies/ToggleFavorite', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': token
            },
            body: JSON.stringify({ itemId: itemId })
        })
        .then(response => response.json())
        .then(data => {
            const star = document.getElementById('star-' + itemId);
            star.src = data.favorited ? '/img/filled-star.png' : '/img/empty-star.png';
            star.classList.Add('pulse');
            setTimeout(() => {
                star.classList.remove('pulse');
            }, 1100);
        });
    }
</script>
    



